Odyssey {
  Program = listOf<Stmt, br> 
  br = ";" | "\n" | "\r"

  Stmt = Expr

  Expr = Assignment | Defun | Ternary | CmpExp

  Defun = FormalParameterList "=>" Expr

  FormalParameterList =
    "(" ListOf<Parameter, ","> ")"

  Funcall = ident ArgList

  ArgList =
    "(" ListOf<Expr, ","> ")"

  Parameter = ident

  Assignment = ident "=" Expr

  Ternary = Expr "?" Expr ":" Expr

  CmpExp = AddExp ">" CmpExp -- gt
         | AddExp "<" CmpExp -- lt
         | AddExp "==" CmpExp -- eq
         | AddExp

  AddExp = AddExp "+" MulExp  -- plus
         | AddExp "-" MulExp -- minus
         | MulExp

  MulExp = MulExp "*" ExpExp -- times
         | MulExp "/" ExpExp -- div
         | ExpExp

  ExpExp = ExpExp "^" PriExp -- pow
         | PriExp

  PriExp = "(" Expr ")" -- parens
         | "-" PriExp -- neg
         | PriVal
  PriVal = Funcall | num | ident

  ident = letter alnum*
  num = digit+
}
